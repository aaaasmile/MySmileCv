== README

Things you may want to cover:

* Ruby version
Sviluppato con 2.1.7

* System dependencies

* Configuration

* Database creation

* Database initialization

* How to run the test suite

* Services (job queues, cache servers, search engines, etc.)

* Deployment instructions

* ...


Please feel free to use a different markup language if you do not plan to run
<tt>rake doc:app</tt>.

== Passaggio dalla versione 1.2.3
Da rails 1.2.3 a rails 4.2.6 è cambiato molto e non so quanto valga la pena riusare i files.
Ora si usa bundle, ruby 2.1.7 o superiore.
Quello che prima era in public (javascripts e css) vanno a finire in app/assets.
Ma per librerie come jquery e boostrap, si includono usando il Gemfile di bundle e poi
includendole in application.js e application.scss (rinominato apposta per usarlo con boostrap).
Nel file di layout poi bisogna includere solo il file application.js/.scss con gli include che sono
messi in commento, questo mi ha creato confusione, ma in javascript non esiste il comando 'require jquery'
Il controller e le view sono cambiati. I dati che vengono salvati nella session sono sempre serializzazioni
dell'oggetto e non l'istanza dell'oggetto, quindi ho dovuto ricreare l'oggetto Curriculum ad ogni richiesta.
Il delete di un record, o risorsa come viene chiamato ora, viene fatto attraverso un tag dell'html <a>,
per questo occorre jqueryu. Le routes vengono annesse automaticamente con il comando resources: in routes.rb.
Per l'update di una risorsa, occorre avere qualcosa come params.require(:identity).permit(<lista dei campi ammessi>,
prima questo codice era nel modello, ora è nel controllo.
Le icone in boostrap (glyphicon) vengono incluse di default e se boostrap va, vanno anche le icone
senza fare nulla.

Nella picture, per far funzionare il modello bisogna usare nel form il multipart=true in questo modo
<%= form_for(@identpicture, html:{multipart: true})
Nel validates_format_of del modello, la regex /^image/ diventa /\Aimage/


== Snippets non chiari
<%= link_to(identity, class: 'btn btn-default', aria:{label: 'Show'} ) do %>
    <span class="glyphicon glyphicon-align-left" aria-hidden="true"></span>
<% end %>

Genera:
<a class="btn btn-default" aria-label="Show" href="/identities/2">
   <span class="glyphicon glyphicon-align-left" aria-hidden="true"></span>
</a>

== Nuovo utente
rails console
myuser = User.new
myuser.salt = '<salt>'
myuser.name = '<nome>'
myuser.hashed_password = User.encrypted_password('<password>', myuser.salt)
myuser.save

== Pivotal
per fare un deploy su pivotal ho usato la linea di comando 
cf push MySimileCv
Ho messo due gems per il deploy, puma e rails_12factor.
Per lo sviluppo locale, ho usato il seguente comando per testare l'ambiente di produzione:
bundle exec rails s webrick -e production

Nel fare il deploy non mi funzionava nulla, poi ho lasciato fuori il file manifest.yml e magiacamente
ha funzionato subito. ===> manifest.yml NON si usa!
Da ricordare che puma non va in windows.
Poi ho creato il file Procfile come suggerito dal warning e tutto sembra funzionare per il meglio.
Per fare andare l'applicazione in ambiente production, ho dovuto mettere
config.assets.compile = false
nel file production.rb, altrimenti myappboot.css non veniva caricato.
Su Pivotal il server usato è puma.